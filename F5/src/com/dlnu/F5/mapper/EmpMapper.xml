<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.dlnu.F5.dao.EmpMapper">
	
	<resultMap id="BaseResultMap" type="com.dlnu.F5.pojo.Emp">
		<id column="emp_id" property="empId" jdbcType="INTEGER" />
		<result column="emp_name" property="empName" jdbcType="VARCHAR" />
		<result column="emp_login_name" property="empLoginName" jdbcType="VARCHAR" />
		<result column="emp_pwd" property="empPwd" jdbcType="VARCHAR" />
		<result column="emp_email" property="empEmail" jdbcType="VARCHAR" />
		<result column="emp_phone" property="empPhone" jdbcType="VARCHAR" />
		<result column="emp_hiredate" property="empHiredate" jdbcType="DATE" />
		<result column="emp_salary" property="empSalary" jdbcType="INTEGER" />		
		<result column="emp_info" property="empInfo" jdbcType="VARCHAR" />
		
		<!-- 多对一关联部门 -->
		<association property="dept" javaType="com.dlnu.F5.pojo.Dept">
			<id column="DEPT_ID" property="deptId" jdbcType="INTEGER" />
			<result column="DEPT_NAME" property="deptName" jdbcType="VARCHAR" />
			<result column="DEPT_LOC" property="deptLoc" jdbcType="VARCHAR" />
		</association>
		<!-- 多对一关联职务 -->
		<association property="job" javaType="com.dlnu.F5.pojo.Job">
			<id column="JOB_ID" property="jobId" jdbcType="INTEGER" />
			<result column="JOB_NAME" property="jobName" jdbcType="VARCHAR" />
			<result column="JOB_MIN_SAL" property="jobMinSal" jdbcType="INTEGER" />
			<result column="JOB_MAX_SAL" property="jobMaxSal" jdbcType="INTEGER" />
		</association>
	</resultMap>
	
	<resultMap id="ResultMapWithBLOBs" type="com.dlnu.F5.pojo.Emp"
		extends="BaseResultMap">
		<result column="emp_pic" property="empPic" jdbcType="LONGVARCHAR" />
	</resultMap>
	
	<select id="queryByNameZsh" resultMap="BaseResultMap" parameterType="java.lang.String">
		select * from emp where emp_login_name=#{empLoginName}
	</select>
	
	<insert id="insert" parameterType="com.dlnu.F5.pojo.Emp" >
	    insert into emp (emp_id, emp_name, emp_login_name, 
	      emp_pwd, emp_email, emp_phone, 
	      emp_hiredate, emp_salary, emp_dept_id, 
	      emp_job_id, emp_info, emp_pic
	      )
	    values (default, #{empName,jdbcType=VARCHAR}, #{empLoginName,jdbcType=VARCHAR}, 
	      #{empPwd,jdbcType=VARCHAR}, #{empEmail,jdbcType=VARCHAR}, #{empPhone,jdbcType=VARCHAR}, 
	      #{empHiredate,jdbcType=DATE}, #{empSalary,jdbcType=INTEGER}, #{dept.deptId,jdbcType=INTEGER}, 
	      #{job.jobId,jdbcType=INTEGER}, #{empInfo,jdbcType=VARCHAR}, #{empPic,jdbcType=LONGVARCHAR}
	      )
  </insert>
  	
	<!-- 获得总记录数 -->
	<select id="getCountZsh" resultType="java.lang.Integer">
		SELECT COUNT(*) FROM emp
	</select>

	<!-- 分页查询员工 -->
	<select id="queryByPageZsh" resultMap="BaseResultMap">
		SELECT *
		FROM emp e 
		INNER JOIN dept d ON e.`emp_dept_id`=d.`dept_id`
		INNER JOIN job j ON e.`emp_job_id`=j.`job_id`
		LIMIT #{start},#{pageSize}
	</select>
	
	
	<!--  lyl-->
	<select id="queryByName" resultMap="ResultMapWithBLOBs"
		parameterType="java.lang.String">
		SELECT e.*,d.*,j.* 
		FROM emp e 
		LEFT OUTER JOIN dept d ON e.`emp_dept_id`=d.`dept_id`
		LEFT OUTER JOIN job j ON e.`emp_job_id`=j.`job_id`
		where emp_login_name=#{empLoginName}
	</select>
	
	<update id="update" parameterType="com.dlnu.F5.pojo.Emp">
		update emp 
		set emp_login_name=#{empLoginName},emp_email=#{empEmail},emp_phone=#{empPhone},
		emp_info=#{empInfo}
		where emp_login_name=#{empLoginName}
	</update>

	<update id="updatePwdByName" parameterType="com.dlnu.F5.pojo.Emp">
		update emp set
		emp_pwd=#{empPwd}
		where emp_login_name=#{empLoginName}
	</update>
	
	<!-- 更新用户头像 -->
	<update id="updatePic">
		update emp set emp_pic=#{empPic}
		where  emp_login_name=#{empLoginName}
	</update>
	
	<!-- 获得总记录数 -->
	<select id="getCount" resultType="java.lang.Integer">
		SELECT COUNT(*) FROM emp
	</select>
	
	<!-- 分页查询员工 -->
	<select id="queryByPage" resultMap="BaseResultMap">
		SELECT e.*,d.*,j.*
		FROM emp e
		LEFT OUTER JOIN dept d ON e.`emp_dept_id`=d.`dept_id`
		LEFT OUTER JOIN job j ON e.`emp_job_id`=j.`job_id`
		LIMIT #{start},#{pageSize}
	</select>
	
	<!--zgz  -->
	<!-- 分页查询员工 -->
	<select id="queryByPagezgz" resultMap="BaseResultMap">
		SELECT e.*,d.*
		FROM emp e
		LEFT OUTER JOIN dept d ON e.`emp_dept_id`=d.`dept_id`
		LIMIT #{start},#{pageSize}
	</select>
	
	<!-- 根据empid查询员工 -->
	<select id="queryByIdzgz" resultMap="BaseResultMap"
		parameterType="java.lang.Integer">
		SELECT e.*,d.*
		FROM emp e
		LEFT OUTER JOIN dept d ON e.`emp_dept_id`=d.`dept_id`
	    where emp_id=#{empId}
	</select>
	
	<!-- 根据deptid查询员工 -->
	<select id="queryByDeptIdzgz" resultMap="BaseResultMap"
		parameterType="java.lang.Integer">
		SELECT e.*,d.*
		FROM emp e
		LEFT OUTER JOIN dept d ON e.`emp_dept_id`=d.`dept_id`
	    where emp_dept_id=#{deptId}
	</select>
	
	<!-- 根据jobid查询员工 -->
	<select id="queryByJobIdzgz" resultMap="BaseResultMap"
		parameterType="java.lang.Integer">
		SELECT e.*,d.*
		FROM emp e
		LEFT OUTER JOIN dept d ON e.`emp_dept_id`=d.`dept_id`
	    where emp_job_id=#{jobId}
	</select>		
</mapper>